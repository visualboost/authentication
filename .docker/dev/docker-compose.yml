version: '3.9'

services:

  # Traefik reverse proxy service
  traefik:
    image: traefik:v2.9
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
    networks:
      - vb_auth_network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # Database-Service
  mongodb:
    image: mongo:latest
    container_name: auth_database
    ports:
      # Listen only to localhost to avoid reaching the database from outside
      - "127.0.0.1:40901:40901"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=db
    volumes:
      - "./data:/data/db"
      - "./config/mongo_replica_key.conf:/key/mongo_replica_key"
      - "./.scripts/init_replica_key.sh:/scripts/init_replica_key.sh"
      - "./config/mongod.conf:/etc/mongod.conf"
      - "./logs/db:/var/log/mongodb"
    entrypoint: [ "bash", "/scripts/init_replica_key.sh" ]
    command: [ "mongod", "--config", "/etc/mongod.conf" ]
    networks:
      - vb_auth_network

  # Service to automatically initialize the replica set
  replica-setup:
    image: 'mongo:latest'
    restart: on-failure
    networks:
      - vb_auth_network
    volumes:
      - "./.scripts/init_replicaset.sh:/scripts/init_replicaset.sh"
    entrypoint: [ "bash", "/scripts/init_replicaset.sh" ]
    env_file:
      - .env
    depends_on:
      - mongodb

  backend:
    image: vb_auth_backend:latest
    container_name: backend_service
    command: [ "npm", "run", "start" ]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.backend-strip-prefix.stripprefix.prefixes=/api"
      - "traefik.http.services.backend.loadbalancer.server.port=40900"

      # Define global rate limit
      - "traefik.http.middlewares.ratelimit-global.ratelimit.average=60"
      - "traefik.http.middlewares.ratelimit-global.ratelimit.period=1m"
      - "traefik.http.middlewares.ratelimit-global.ratelimit.burst=10"

      # Add middlewares to backend router
      - "traefik.http.routers.backend.middlewares=backend-strip-prefix,ratelimit-global"

      # Define specific rate limit for /api/authentication/registration
      - "traefik.http.middlewares.ratelimit-registration.ratelimit.average=3"
      - "traefik.http.middlewares.ratelimit-registration.ratelimit.period=1m"
      - "traefik.http.middlewares.ratelimit-registration.ratelimit.burst=2"
      - "traefik.http.routers.backend-registration.rule=Host(`localhost`) && PathPrefix(`/api/authentication/registration`)"
      - "traefik.http.routers.backend-registration.middlewares=backend-strip-prefix,ratelimit-registration"
      - "traefik.http.routers.backend-registration.service=backend"
      - "traefik.http.routers.backend-registration.entrypoints=web"

    env_file:
      - .env
    volumes:
      - "./templates:/templates"
      - "./logs/backend:/logs"
    networks:
      - vb_auth_network
    depends_on:
      replica-setup:
        condition: service_completed_successfully

  react:
    image: vb_auth_react:latest
    container_name: react_service
    command: ["nginx", "-g", "daemon off;"]
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.react.rule=Host(`localhost`)"
      - "traefik.http.services.react.loadbalancer.server.port=80"
    env_file:
      - .env
    volumes:
      - "./config/default.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - vb_auth_network
    depends_on:
      - backend

networks:
  vb_auth_network: